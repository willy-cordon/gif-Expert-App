{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFechGifs","key","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAgB5C,OACC,0BAAMC,SAVc,SAACC,GACdA,EAAEC,iBAEFJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAOd,2CACA,2BACIO,KAAK,OACLC,MAAST,EACTU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,mGAEsFC,UAAUH,IAFhG,SAICI,MAAMF,GAJP,cAIbG,EAJa,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAACC,GAExB,OACI,yBAAKC,UAAU,0CAEX,yBAAKC,IAAMF,EAAMd,IAAKiB,IAAMH,EAAMJ,QAClC,2BAAII,EAAMJ,SCJTQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAc,IAAD,EACXd,mBAAS,CAC/BqB,KAAO,GACPc,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAmBrC,OAbAC,qBAAW,WACPzB,EAAQC,GACLyB,MAAK,SAAAC,GAEAH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAItB,CAACrB,IAGGsB,EDhBuBK,CAAa3B,GAA/Ba,EAFuB,EAE5BN,KAAYc,EAFgB,EAEhBA,QAGnB,OACI,kBAAC,WAAD,KAEA,wBAAIJ,UAAU,qCAAqCjB,GAEjDqB,GAAW,uBAAGJ,UAAU,qCAAb,WAET,yBAAKA,UAAU,aAGPJ,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAkB,IAAOlB,EAAIC,IACPD,UEpBfmB,EAAe,WAAO,IAAD,EACE3C,mBAAS,CAAC,gBADZ,mBAC3B4C,EAD2B,KACf7C,EADe,KAO9B,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACIA,SAAYA,EACZ4B,IAAY5B,U,MCfxC+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e9d48c7d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n   }\r\n    const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n        //   props.setCategories();\r\n        if (inputValue.trim().length >2) {\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n     <form onSubmit={handleSubmit}>\r\n         \r\n            <h2>AddCategory</h2>\r\n            <input \r\n                type=\"text\" \r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n\r\n            />\r\n     </form>\r\n       \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=FjDOX63pqpL9ZTuiHK8RpxPpvmNQkr0c&limit=10&q=${ encodeURI(category)}`;\r\n\r\n    const resp  = await fetch(url);\r\n    const {data}  = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = (props) => {\r\n    // console.log(props.url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            {/* {img.title} */}\r\n            <img src= {props.url} alt ={props.title} />\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFechGifs( category )\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n        <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n        \r\n        { loading && <p className=\"animate__animated animate__flash \">Loading</p> }\r\n       \r\n            <div className=\"card-grid\">\r\n        \r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                        key = {img.id} \r\n                        {...img}  \r\n                        />\r\n                    \r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n//rafc para crear una estructura basica","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n// // si no tiene ninguna dÂ¡ependencia se ejecuta solo una ves, (component didmount en clases)\r\n\r\nexport const useFechGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n          .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n           \r\n          })\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { Fragment,useState } from 'react';\r\nimport {AddCategory} from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\nexport const GifExpertApp = () => {\r\nconst [categories, setCategories] = useState(['Dragon Ball']);\r\nconst handleAdd = () => {\r\n    \r\n    setCategories([ ...categories, 'pelispluss' ]);\r\n}\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GifGrid \r\n                            category = {category}\r\n                            key      = {category}\r\n\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}